cluster1 <- names(yeast.clusters8[yeast.clusters8 == 1])
cat(cluster1, quote=F, sep="\n")
test.data <- rbind(matrix(rnorm(100, mean=0, sd=0.2),ncol=2),#
matrix(rnorm(150,mean=1,sd=0.5),ncol=2))
ean=1,sd=0.5),ncol=2))#
> c
colnames(test.data) <- c("x", "y")
plot(test.data)
cl = kmeans(test.data, 2)
names(cl)
cl <- kmeans(test.data, 2)
names(cl)
cl$cluster
plot(test.data, col = cl$cluster)
cl$centers
points(cl$centers, col = 1:2, pch =8, cex=2)
cl <- kmeans(test.data, 5)
plot(test.data, col = cl$cluster)
points(cl$centers, col = 1:5, pch =8 , cex=2)
cl <- kmeans(test.data, 5, nstart=25)
plot(test.data, col = cl$cluster)
points(cl$centers, col = 1:5, pch = 8, cex=2)
yeast.kmeans <- kmeans(1-yeast.cor, 8)
kclusters <- yeast.kmeans$cluster
table(kclusters)
kclusters <- kclusters[order.dendrogram(yeast.dend)]
dend.colors <- unique(get_leaves_branches_attr(color_branches(yeast.dend, k#
=8), attr="col"))
plot(branches_attr_by_clusters(yeast.dend, kclusters, dend.colors),leaflab="#
none")
plot(branches_attr_by_clusters(yeast.dend, kclusters, dend.colors),leaflab="none")
source("https://bioconductor.org/biocLite.R")#
biocLite("graph")#
biocLite("Rgraphviz")#
biocLite("RBGL")
source("GEResponse.r")
parent
source("GEResponse.r")
parent
RosRParent = grepl("VNG0258H", parent)
RosRParent
RosRParent = subset(parent, grepl("VNG0258H", row.names(parent))
RosRParent = subset(parent, grepl("VNG0258H", row.names(parent)))
RosRParent
plot(RosRParent)
dim(RosRParent)
scatter(RosRParent)
hist(RosRParent)
RosRParent$VNG0258H
row.names(RosRParent)
RosRParent$"VNG0258H"
col.names(RosRParent)
colnames(RosRParent)
RosRParent["VNG0258H"]
RosRParent[[]"VNG0258H"]]
RosRParent[["VNG0258H"]]
RosRParent(1)
RosRParent[1]
RosRParent[1:8]
unlist(RosRParent[1:8])
x <- unlist(RosRParent[1:8])
x
write.table(format(RosRParent, row.names=F, col.names=F))
x <- write.table(format(RosRParent, row.names=F, col.names=F))
length(x)
x[2]
x <- write.table(format(RosRParent), row.names=F, col.names=F))
x <- write.table(format(RosRParent), row.names=F, col.names=F)
x[2]
x[0]
list(x)
RosRParent["X.40min_H2O2_ura3"]
table(x)
x
x <- write.table(format(RosRParent), row.names=F, col.names=F)
x
x <- write.table(format(RosRParent, justify="right"), row.names=F, col.names=F)
x
x = write.table(format(RosRParent, justify="right"), row.names=F, col.names=F)
x
print(mat)
print(RosRParent)
list(RosRParent)
unlist(RosRParent)
x <- unlist(RosRParent)
x[0]
x[1]
x[2]
unlist(x[2])
col.names(x)
colnames(X)
x
colnames(x)
row.names(x)
x
row.names(RosRParent)
row.names(x)
?read.csv
x
unlist(x)
x[5]
is.character(x)
is.character(x[5])
toString(x)
x = toString(x)
x
list(x)
x[5]
x
x[1]
str_split(x, ",")
library(stringr)
str_split(x, ",")
x
x = str_split(x, ",")
x
x[1]
list(x)
x
x[[1]]
x[[2]]
strtoi(x)
x
strtoi(x, base =10)
x
unlist(x)
as.integer(x)
as.float(x)
as.numeric(x)
import json
b = c(-0.235669786, -0.018466872)
b
b[1]
b[2]
x
unlist(x)
x
unlist(x)
unlist(unlist(x))
x = unlist(x)
x
x[1]
x[2]
as.numeric(x[1])
as.numeric(x)
RosRParent
bbb = toString(RosRParent)
bbb
unlist(bbb)
bbb = toString(RosRParent)
as.numeric(bbb)
unlist(bbb)
as.numeric(bbb)
unlist(bbb)
bbb = unlist(bbb)
as.numeric(bbb)
RosRParentString = toString(RosRParent)
RosRParentString
RosRlist = unlist(RosRParentString)
RosRlist[1]
RosRlist
RosRParentString = str_split(toString(RosRParent), ",")
RosRParentString
unlist(RosRParentString)
RosRParentArray = unlist(RosRParentString)
RosRParrentArray[1]
RosRParentArray[1]
RosRParentArray = as.numeric(unlist(RosRParentString))
RosRParentArray
RosRParentArray(1)
RosRParentArray[1]
plot(RosRParentArray)
time = c(-40, 20, 0, 10, 20, 40, 60, 80)#
#
plot(time, RosRParentArray)
time = c("-40", "20", "0", "10", "20", "40", "60", "80")#
#
plot(time, RosRParentArray)
time
RosRParentArray
?plot
plot(RosRParentArray)
?plot
colnames(RosRParent)
plot(RosRParentArray, ylab = colnames(RosRParent))
plot(RosRParentArray, xlab = colnames(RosRParent))
plot(RosRParentArray, xlab = colnames(RosRParent)'')
plot(RosRParentArray, xlab = colnames(RosRParent)')
plot(RosRParentArray, xlab = t(colnames(RosRParent)))
plot(RosRParentArray, Rowv = colnames(RosRParent))
plot(RosRParentArray, xlab = colnames(RosRParent))
plot(RosRParentArray, type = "l")
plot(RosRParentArray)#
plot(RosRDelArray)
source("GEResponse.r")
source("GEResponse.r")
RosRPrentArray
RosRParentArray
RosRDelArray
RosRParent
RosRDelGene
gedata[1:8]
gedata = read.csv("GEdata.csv", header=T, row.names=1)#
#
# Subset of the Parent Strain#
parent = gedata[1:8]#
#
# Subset of the RosR Deletion#
RosRDel = gedata[9:16]#
#
# Grabbing a specific gene#
RosRParent = subset(parent, grepl("VNG0258H", row.names(parent)))#
RosRDelGene = subset(parent, grepl("VNG0258H", row.names(RosRDel)))#
#
# Grab the expression levels#
RosRParentString = str_split(toString(RosRParent), ",")#
RosRParentArray = as.numeric(unlist(RosRParentString))#
#
RosRDelString =  str_split(toString(RosRDelGene), ",")#
RosRDelArray = as.numeric(unlist(RosRDelString))
RosRParentArray
RosRDelArray
RosRDelGene
source("GEResponse.r")
library(ggplot2)
df <- data.frame(colnames(parent), RosRDelArray, RosRParentArray)
df
ggplot(df)
ggplot(df, aes(x))
plot(df)
ggplot(df)
df <- data.frame(RosParentArray, RosRDelArray)
df <- data.frame(RosRParentArray, RosRDelArray)
df
ggplot(df)
ggplot(df, geom_line(aes(y=RosParentArray))
ggplot(df, geom_line(aes(y=RosParentArray))
ggplot(df) + geom_line(RosParentArray)
ggplot(df) + geom_line(RosRParentArray)
ggplot(df) + geom_line(aes(y=RosRParentArray))
x = c(1,2,3,4,5,6,7,8)
df <- data.frame(x, RosParentArray, RosRDelArray)
df <- data.frame(x, RosRParentArray, RosRDelArray)
df
ggplot(df, aes(x))
ggplot(df, aes(x)) + geom_line(aes(y=RosRParentArray), colour="red")
ggplot(df, aes(x)) + geom_line(aes(y=RosRParentArray), colour="red") + geom_line(aes(y=RosRDelArray, colour="green"))
ggplot(df, aes(x)) + geom_line(aes(y=RosRParentArray), colour="red") + geom_line(aes(y=RosRDelArray), colour="green")
ggplot(df) + geom_line(aes(y=RosRParentArray), colour="red") + geom_line(aes(y=RosRDelArray), colour="green")
ggplot(df, aes(x)) + geom_line(aes(y=RosRParentArray), colour="red") + geom_line(aes(y=RosRDelArray), colour="green")
?ggplot
x
x = 2
x
ggplot(df, aes(x)) + geom_line(aes(y=RosRParentArray), colour="red") + geom_line(aes(y=RosRDelArray), colour="green")
ggplot(df, aes(x)) + geom_line(aes(y=RosRParentArray), colour="red") + geom_line(aes(y=RosRDelArray), colour="green")
ggplot(df, aes(x)) + geom_line(aes(y=RosRParentArray), colour="red") + geom_line(aes(y=RosRDelArray), colour="green")
ggplot(df, aes(x)) + geom_line(aes(y=RosRParentArray), colour="red") + geom_line(aes(y=RosRDelArray), colour="green") + ylab("blurp")
ggplot(df, aes(x = colnames(parent))) + geom_line(aes(y=RosRParentArray), colour="Parent") + geom_line(aes(y=RosRDelArray), colour="RosR Knockout")
ggplot(df, aes(x = colnames(parent))) + geom_line(aes(y=RosRParentArray, colour="Parent") + geom_line(aes(y=RosRDelArray, colour="RosR Knockout")
ggplot(df, aes(x = colnames(parent))) + geom_line(aes(y=RosRParentArray, colour="Parent") + geom_line(aes(y=RosRDelArray, colour="RosR Knockout")) + scale_colour_manual("", breaks = c("Parent", "RosR Knockout"), values = c("green", "red")) + ylab("Normalized log 10 Expression Ratio")
ggplot(df, aes(x = colnames(parent))) + geom_line(aes(y=RosRParentArray, colour="Parent") + geom_line(aes(y=RosRDelArray, colour="RosR Knockout")) + scale_colour_manual("", breaks = c("Parent", "RosR Knockout"), values = c("green", "red")) + ylab("Normalized log 10 Expression Ratio"))
ggplot(df, aes(x = colnames(parent))) + geom_line(aes(y=RosRParentArray, colour="Parent")) + geom_line(aes(y=RosRDelArray, colour="RosR Knockout")) + scale_colour_manual("", breaks = c("Parent", "RosR Knockout"), values = c("green", "red")) + ylab("Normalized log 10 Expression Ratio")
ggplot(df, aes(x = colnames(parent)))
ggplot(df, aes(x = colnames(parent))) + geom_line(aes(y=RosRParentArray, colour="Parent")) + geom_line(aes(y=RosRDelArray, colour="RosR_Knockout")) + scale_colour_manual("", breaks = c("Parent", "RosR Knockout"), values = c("green", "red"))
ggplot(df, aes(x = colnames(parent))) + geom_line(aes(y=RosRParentArray, colour="Parent")) + geom_line(aes(y=RosRDelArray, colour="RosR_Knockout")) + scale_colour_manual("", breaks = c("Parent", "RosR Knockout"), values = c("green", "red")) + xlab(" ") + ylab("Normalized log 10 Expression Ratio")
ggplot(df, aes(x = colnames(parent))) + geom_line(aes(y=RosRParentArray, colour="green")) + geom_line(aes(y=RosRDelArray, colour="red"))
ggplot(df, aes(x = colnames(parent))) + #
	geom_line(aes(y=RosRParentArray, colour="Parent")) + 		#
	geom_line(aes(y=RosRDelArray, colour="red")) + #
	scale_colour_manual("", #
		breaks = c("Parent", "RosR Knockout"), #
		values = c("green", "red")) + #
	xlab(" ") + #
	scale_y_continuous("Normalized log 10 Expression Ratio")
ggplot(df, aes(x = colnames(parent), group=1 )) + #
	geom_line(aes(y=RosRParentArray, colour="Parent")) + 		#
	geom_line(aes(y=RosRDelArray, colour="red")) + #
	scale_colour_manual("", #
		breaks = c("Parent", "RosR Knockout"), #
		values = c("green", "red")) + #
	xlab(" ") + #
	scale_y_continuous("Normalized log 10 Expression Ratio")
ggplot(df, aes(x = colnames(parent), group=1 )) + #
	geom_line(aes(y=RosRParentArray, colour="Parent")) + 		#
	geom_line(aes(y=RosRDelArray, colour="red")) + #
	scale_colour_manual("", #
		breaks = c("Parent", "RosR Knockout"), #
		values = c("green", "red")) + #
	xlab(" ") + #
	scale_y_continuous("Normalized log 10 Expression Ratio")
ggplot(df, aes(x = colnames(parent), group=2 )) + #
	geom_line(aes(y=RosRParentArray, colour="Parent")) + 		#
	geom_line(aes(y=RosRDelArray, colour="red")) + #
	scale_colour_manual("", #
		breaks = c("Parent", "RosR Knockout"), #
		values = c("green", "red")) + #
	xlab(" ") + #
	scale_y_continuous("Normalized log 10 Expression Ratio")
ggplot(data = df, aes(x = colnames(parent), group=2 )) + #
	geom_line(aes(y=RosRParentArray, colour="Parent")) + 		#
	geom_line(aes(y=RosRDelArray, colour="red")) + #
	scale_colour_manual("", #
		breaks = c("Parent", "RosR Knockout"), #
		values = c("green", "red")) + #
	xlab(" ") + #
	scale_y_continuous("Normalized log 10 Expression Ratio")
ggplot(data = df, aes(x = colnames(parent))) + #
	geom_line(aes(y=RosRParentArray, colour="Parent")) + 		#
	geom_line(aes(y=RosRDelArray, colour="red")) + #
	scale_colour_manual("", #
		breaks = c("Parent", "RosR Knockout"), #
		values = c("green", "red")) + #
	xlab(" ") + #
	scale_y_continuous("Normalized log 10 Expression Ratio")
ggplot(data = df, aes(x = colnames(parent), y='blurp')) + #
	geom_line(aes(y=RosRParentArray, colour="Parent")) + 		#
	geom_line(aes(y=RosRDelArray, colour="red")) + #
	scale_colour_manual("", #
		breaks = c("Parent", "RosR Knockout"), #
		values = c("green", "red")) + #
	xlab(" ") + #
	scale_y_continuous("Normalized log 10 Expression Ratio")
ggplot(data = df, aes(x = colnames(parent), y='blurp')) + #
	geom_line(aes(y=RosRParentArray, colour="Parent")) + 		#
	geom_line(aes(y=RosRDelArray, colour="red")) + #
	scale_colour_manual("", #
		breaks = c("Parent", "RosR Knockout"), #
		values = c("green", "red")) + #
	xlab(" ") + #
	scale_y_continuous("Normalized log 10 Expression Ratio")ggplot(data = df, aes(x = colnames(parent), group=breaks )) + #
	geom_line(aes(y=RosRParentArray, colour="Parent")) + 		#
	geom_line(aes(y=RosRDelArray, colour="red")) + #
	scale_colour_manual("", #
		breaks = c("Parent", "RosR Knockout"), #
		values = c("green", "red")) + #
	xlab(" ") + #
	scale_y_continuous("Normalized log 10 Expression Ratio")
factor(colnames(parent))
RosRData <- data.frame(#
	condition = factor(c("Parent", "RosR Knockout")),#
	time = factor(colnames(parent)),#
	levels = c(RosRParentArray, RosRDelArray)#
)
RosRData
ggplot(data=RosRData, aes(x=time, y=levels, group=condition, shape=condition)) + geom_line() + geom_point()
